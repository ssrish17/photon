From 06f3988683a5823e203690210d357b57108421da Mon Sep 17 00:00:00 2001
From: Mounesh Badiger <badigerm@vmware.com>
Date: Sun, 23 Aug 2020 17:53:21 +0530
Subject: [PATCH 04/10] Enable cache=loose for vdfs 9p.

cache=loose, helps metadata performance, but due
less photon memory datapath performance regressed.

so only enable loose cache for metadata and datapath
just go through normal zc path.

Albert Guo <aguo@vmware.com>
Fri Oct 6 2023
Removed p9_is_fid_proto_dotx() as it's not used anywhere.
---
 fs/9p/vfs_file.c | 30 ++++++++++++++++++++++++++++--
 1 file changed, 28 insertions(+), 2 deletions(-)

diff --git a/fs/9p/vfs_file.c b/fs/9p/vfs_file.c
index 6919d9c75..850003138 100644
--- a/fs/9p/vfs_file.c
+++ b/fs/9p/vfs_file.c
@@ -434,6 +434,32 @@ v9fs_file_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	return err;
 }
 
+static ssize_t
+v9fs_cached_file_read_iter(struct kiocb *iocb, struct iov_iter *to)
+{
+	struct inode *inode = iocb->ki_filp->f_mapping->host;
+	struct v9fs_session_info *v9ses = v9fs_inode2v9ses(inode);
+
+	if (v9ses->metaonly) {
+		return v9fs_file_read_iter(iocb, to);
+	}
+
+	return generic_file_read_iter(iocb, to);
+}
+
+static ssize_t
+v9fs_cached_file_write_iter(struct kiocb *iocb, struct iov_iter *from)
+{
+	struct inode *inode = iocb->ki_filp->f_mapping->host;
+	struct v9fs_session_info *v9ses = v9fs_inode2v9ses(inode);
+
+        if (v9ses->metaonly) {
+		return v9fs_file_write_iter(iocb, from);
+	}
+
+	return generic_file_write_iter(iocb, from);
+}
+
 static int v9fs_file_fsync(struct file *filp, loff_t start, loff_t end,
 			   int datasync)
 {
@@ -651,8 +677,8 @@ const struct file_operations v9fs_cached_file_operations = {
 
 const struct file_operations v9fs_cached_file_operations_dotl = {
 	.llseek = generic_file_llseek,
-	.read_iter = generic_file_read_iter,
-	.write_iter = generic_file_write_iter,
+	.read_iter = v9fs_cached_file_read_iter,
+	.write_iter = v9fs_cached_file_write_iter,
 	.open = v9fs_file_open,
 	.release = v9fs_dir_release,
 	.lock = v9fs_file_lock_dotl,
-- 
2.39.0

